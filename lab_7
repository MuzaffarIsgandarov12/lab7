import java.util.concurrent.*;

public class TimeoutExample {
    public static void main(String[] args) {
        try {
            runWithTimeout(()-> {
                // Perform your task here
                // ...
                // Simulating a long-running task
                Thread.sleep(5000);
            }, 3000); // Specify the timeout duration in milliseconds
        } catch (TimeoutException e) {
            System.out.println("Task timed out!");
        } catch (InterruptedException e) {
            System.out.println("Task interrupted!");
        }
    }

    public static void runWithTimeout(Runnable task, long timeout) throws TimeoutException, InterruptedException {
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future<?> future = executor.submit(task);

        try {
            future.get(timeout, TimeUnit.MILLISECONDS);
        } catch (ExecutionException e) {
            // Exception occurred within the task
            throw new RuntimeException(e);
        } catch (TimeoutException e) {
            // Timeout occurred
            future.cancel(true);
            throw new TimeoutException();
        } finally {
            executor.shutdownNow(); // Stop the executor
        }
    }
}
